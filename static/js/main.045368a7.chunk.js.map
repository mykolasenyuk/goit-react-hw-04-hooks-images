{"version":3,"sources":["components/ImageGalleryItem/ImageGelleryItem.module.css","components/Modal/Modal.module.css","components/Loader/LoaderSpiner.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","services/imageApi.js","components/Loader/Loader.jsx","components/SearchBar/SearchBarHooks.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Modal/ModalHooks.jsx","components/App/AppHooks.jsx","index.js","components/SearchBar/SearchBar.module.css","components/App/App.module.css"],"names":["module","exports","api","fetchImages","name","page","fetch","then","response","ok","json","Promise","reject","Error","LoaderSpiner","className","s","Loader","type","color","height","width","timeout","SearchBarHooks","onSubmit","useState","setName","Searchbar","SearchForm","e","preventDefault","trim","toast","warn","SearchFormButton","SearchFormButtonLabel","onChange","currentTarget","value","toLowerCase","SearchFormInput","placeholder","ImageGalleryItem","webformatURL","tags","openModal","onClick","src","alt","ImageGalleryItemImage","ImageGallery","images","map","id","largeImageURL","Button","ModalRoot","document","querySelector","ModalHooks","onClose","image","useEffect","window","addEventListener","handleKeyPress","removeEventListener","code","createPortal","Overlay","target","role","Modal","AppHooks","imageName","setImageName","setPage","setImages","status","setStatus","selectedImage","setSelectedImage","modalIsOpen","setModalIsOpen","data","hits","pictures","length","error","success","prevImages","scrollTo","top","body","scrollHeight","behavior","catch","formSubmit","onLoadMore","prevState","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.045368a7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGelleryItem_ImageGalleryItem__O8wt_\",\"ImageGalleryItemImage\":\"ImageGelleryItem_ImageGalleryItemImage__jNq6z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__2PN41\",\"Modal\":\"Modal_Modal__2_KGr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"LoaderSpiner_Loader__vfSTc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__35HpJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__AI5oU\"};","function fetchImages(name, page) {\r\n  return fetch(\r\n    `https://pixabay.com/api/?q=${name}&page=${page}&key=21697918-6e31458764a1a6acf0f5f3f6d&image_type=photo&orientation=horizontal&per_page=12`,\r\n  ).then(response => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n    return Promise.reject(new Error(`There is no images with name ${name}`));\r\n  });\r\n}\r\nconst api = { fetchImages };\r\nexport default api;\r\n","import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport Loader from 'react-loader-spinner';\r\nimport s from './LoaderSpiner.module.css';\r\n\r\nexport default function LoaderSpiner() {\r\n  return (\r\n    <div className={s.Loader}>\r\n      <Loader\r\n        type=\"ThreeDots\"\r\n        color=\"#00BFFF\"\r\n        height={120}\r\n        width={120}\r\n        timeout={3000}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport s from './SearchBar.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function SearchBarHooks({ onSubmit }) {\r\n  const [name, setName] = useState('');\r\n\r\n  const handleNameChange = e => {\r\n    setName(e.currentTarget.value.toLowerCase());\r\n  };\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (name.trim() === '') {\r\n      toast.warn('Enter valid name,please!');\r\n      return;\r\n    }\r\n    onSubmit(name);\r\n    setName('');\r\n  };\r\n\r\n  return (\r\n    <header className={s.Searchbar}>\r\n      <form className={s.SearchForm} onSubmit={handleSubmit}>\r\n        <button type=\"submit\" className={s.SearchFormButton}>\r\n          <span className={s.SearchFormButtonLabel}></span>\r\n        </button>\r\n\r\n        <input\r\n          onChange={handleNameChange}\r\n          className={s.SearchFormInput}\r\n          type=\"text\"\r\n          value={name}\r\n          placeholder=\"Search images and photos\"\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n\r\nSearchBarHooks.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport s from './ImageGelleryItem.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function ImageGalleryItem({ webformatURL, tags, openModal }) {\r\n  return (\r\n    <li onClick={openModal} className={s.ImageGalleryItem}>\r\n      <img src={webformatURL} alt={tags} className={s.ImageGalleryItemImage} />\r\n    </li>\r\n  );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  webformatURL: PropTypes.string.isRequired,\r\n  tags: PropTypes.string.isRequired,\r\n  openModal: PropTypes.func.isRequired,\r\n};\r\n","import ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport s from './ImageGallery.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGallery = ({ images, openModal }) => {\r\n  return (\r\n    <ul className={s.ImageGallery}>\r\n      {images.map(({ id, webformatURL, tags, largeImageURL }) => (\r\n        <ImageGalleryItem\r\n          key={id}\r\n          tags={tags}\r\n          webformatURL={webformatURL}\r\n          openModal={() => openModal(largeImageURL, tags)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ImageGallery;\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      webformatURL: PropTypes.string.isRequired,\r\n      largeImageURL: PropTypes.string.isRequired,\r\n      tags: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n  openModal: PropTypes.func.isRequired,\r\n};\r\n\r\n// import LoaderSpiner from '../Loader/Loader';\r\n// import api from '../../services/imageApi';\r\n// export default class ImageGahllery extends Component {\r\n//   state = {\r\n//     images: [],\r\n//     error: null,\r\n//     status: 'idle',\r\n//   };\r\n//   componentDidUpdate(prevProps, prevState) {\r\n//     const prevName = prevProps.imageName;\r\n//     const newName = this.props.imageName;\r\n//     const page = this.props.page;\r\n//     console.log(page);\r\n//     if (prevName !== newName) {\r\n//       //   console.log('changed name');\r\n//       //   console.log('prev', prevName);\r\n//       //   console.log('this', newName);\r\n\r\n//       this.setState({ status: 'pending' });\r\n\r\n//       api\r\n//         .fetchImages(newName, page)\r\n//         .then(data => data.hits)\r\n//         .then(images => this.setState({ images, status: 'resolved' }))\r\n//         .catch(error => this.setState({ error, status: 'rejected' }));\r\n//     }\r\n//   }\r\n\r\n//   render() {\r\n//     const { images, error, status } = this.state;\r\n\r\n//     if (status === 'idle') {\r\n//       return <div> Enter Image name</div>;\r\n//     }\r\n//     if (status === 'pending') {\r\n//       return <LoaderSpiner />;\r\n//     }\r\n//     if (status === 'rejected') {\r\n//       return <h1>{error.message}</h1>;\r\n//     }\r\n//     if (status === 'resolved') {\r\n//       return (\r\n//         <ul className=\"ImageGallery\">\r\n//           {images.map(({ id, webformatURL, tags, largeImageURL }) => (\r\n//             <ImageGalleryItem\r\n//               key={id}\r\n//               tags={tags}\r\n//               webformatURL={webformatURL}\r\n//               // largeImageURL={largeImageURL}\r\n//               openModal={this.props.openModal(largeImageURL)}\r\n//             />\r\n//           ))}\r\n//         </ul>\r\n//       );\r\n//     }\r\n//   }\r\n// }\r\n","import React from 'react';\r\nimport s from './Button.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Button({ onClick }) {\r\n  return (\r\n    <button type=\"button\" onClick={onClick} className={s.Button}>\r\n      Load more\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","import { useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport s from './Modal.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ModalRoot = document.querySelector('#modal-root');\r\n\r\nexport default function ModalHooks({ onClose, image }) {\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKeyPress);\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyPress);\r\n    };\r\n  });\r\n\r\n  const handleKeyPress = e => {\r\n    if (e.code !== 'Escape') {\r\n      return;\r\n    }\r\n    onClose();\r\n  };\r\n\r\n  const handleBackdropClick = e => {\r\n    if (e.target !== e.currentTarget) {\r\n      return;\r\n    }\r\n    onClose();\r\n  };\r\n\r\n  return createPortal(\r\n    <div\r\n      className={s.Overlay}\r\n      onClick={handleBackdropClick}\r\n      role=\"presentation\"\r\n    >\r\n      <div className={s.Modal}>\r\n        <img src={image.src} alt={image.alt} />\r\n      </div>\r\n    </div>,\r\n    ModalRoot,\r\n  );\r\n}\r\nModalHooks.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  image: PropTypes.objectOf(PropTypes.string.isRequired).isRequired,\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport api from '../../services/imageApi';\r\nimport LoaderSpiner from '../Loader/Loader';\r\nimport SearchBarHooks from '../SearchBar/SearchBarHooks';\r\n// import SearchBar from '../SearchBar/SearchBar';\r\nimport ImageGallery from '../ImageGallery/ImageGallery';\r\nimport Button from '../Button/Button';\r\n// import Modal from '../Modal/Modal';\r\nimport ModalHooks from '../Modal/ModalHooks';\r\nimport s from './App.module.css';\r\n\r\nexport default function AppHooks() {\r\n  const [imageName, setImageName] = useState('');\r\n  const [page, setPage] = useState(1);\r\n  const [images, setImages] = useState([]);\r\n  const [status, setStatus] = useState('idle');\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!imageName) {\r\n      return;\r\n    }\r\n\r\n    setStatus('pending');\r\n    api\r\n      .fetchImages(imageName, page)\r\n      .then(data => data.hits)\r\n      .then(pictures => {\r\n        if (pictures.length === 0) {\r\n          setStatus('rejected');\r\n          toast.error(`'${imageName}' not found!`);\r\n        } else {\r\n          toast.success(`'${imageName}' is finded`);\r\n        }\r\n\r\n        setImages(prevImages => [...prevImages, ...pictures]);\r\n\r\n        setStatus('resolved');\r\n        if (page > 1) {\r\n          window.scrollTo({\r\n            top: document.body.scrollHeight,\r\n            behavior: 'smooth',\r\n          });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        setStatus('rejected');\r\n      });\r\n  }, [imageName, page]);\r\n\r\n  const resetState = () => {\r\n    setImageName('');\r\n    setPage(1);\r\n    setImages([]);\r\n    setSelectedImage(null);\r\n    setStatus('idle');\r\n    setModalIsOpen(false);\r\n  };\r\n\r\n  const formSubmit = imageName => {\r\n    resetState();\r\n    setImageName(imageName);\r\n  };\r\n  const openModal = (src, alt) => {\r\n    setModalIsOpen(true);\r\n    setSelectedImage({ src, alt });\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setModalIsOpen(false);\r\n  };\r\n  const onLoadMore = () => {\r\n    setPage(prevState => prevState + 1);\r\n  };\r\n  if (status === 'idle') {\r\n    return (\r\n      <div className={s.App}>\r\n        <SearchBarHooks onSubmit={formSubmit} />\r\n        <ToastContainer />\r\n      </div>\r\n    );\r\n  }\r\n  if (status === 'pending') {\r\n    return (\r\n      <div className={s.App}>\r\n        <SearchBarHooks onSubmit={formSubmit} />\r\n        <ImageGallery openModal={openModal} images={images} />\r\n        <LoaderSpiner />\r\n        {images.length > 0 && <Button onClick={onLoadMore} />}\r\n      </div>\r\n    );\r\n  }\r\n  if (status === 'rejected') {\r\n    return (\r\n      <div className={s.App}>\r\n        <SearchBarHooks onSubmit={formSubmit} />\r\n      </div>\r\n    );\r\n  }\r\n  if (status === 'resolved') {\r\n    return (\r\n      <div className={s.App}>\r\n        <SearchBarHooks onSubmit={formSubmit} />\r\n        <ImageGallery openModal={openModal} images={images} />\r\n        {images.length > 0 && <Button onClick={onLoadMore} />}\r\n        {modalIsOpen && (\r\n          <ModalHooks image={selectedImage} onClose={closeModal} />\r\n        )}\r\n        <ToastContainer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import App from './components/App/App';\nimport AppHooks from './components/App/AppHooks';\n\nReactDOM.render(<AppHooks />, document.querySelector('#root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"SearchBar_Searchbar__TYNs2\",\"SearchForm\":\"SearchBar_SearchForm__1gtKD\",\"SearchFormButton\":\"SearchBar_SearchFormButton__1M59E\",\"SearchFormButtonLabel\":\"SearchBar_SearchFormButtonLabel__3FGLB\",\"SearchFormInput\":\"SearchBar_SearchFormInput__4x-Ry\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__4RcbE\"};"],"sourceRoot":""}